lua_shared_dict prometheus_metrics {{ nginx_lua_exporter_shared }};
lua_package_path "/etc/nginx/lua.d/prometheus/?.lua;;";

init_worker_by_lua_block {
    prometheus = require("prometheus").init("prometheus_metrics")
    metric_requests = prometheus:counter("nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
    metric_latency = prometheus:histogram("nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
    metric_connections = prometheus:gauge("nginx_http_connections", "Number of HTTP connections", {"state"})
}

log_by_lua_block {
    metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
}

server {
    listen {{ nginx_lua_exporter_port }};
    allow all;
    location /metrics {
	content_by_lua_block {
	    metric_connections:set(ngx.var.connections_reading, {"reading"})
	    metric_connections:set(ngx.var.connections_waiting, {"waiting"})
	    metric_connections:set(ngx.var.connections_writing, {"writing"})
	    prometheus:collect()
	}
    }
}
