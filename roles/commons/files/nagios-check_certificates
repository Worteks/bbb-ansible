#!/bin/sh

LOOKUP="/etc/httpd /etc/apache2 /etc/apache /etc/origin /etc/kubernetes /etc/etcd /etc/nginx /etc/postfix /etc/exim4 /etc/courrier /usr/local/etc/apache22 /etc/riak /etc/openvpn /etc/unbound /etc/nsd /etc/letsencrypt/live /etc/haproxy /etc/stunnel/ssl"
PRG=`basename $0`
OK=0
WARNING=1
CRITICAL=2
UNKNOWN=3

now=`date +%s`
somewhataweek=604800
somewhatsixweeks=3628800
inaboutaweek=`expr $now + $somewhataweek`
inaboutsixweeks=`expr $now + $somewhatsixweeks`
if test "$1" -a \( "$1" = 1week -o "$1" = 2months \); then
    checkfor=$1
else
    checkfor=1week
fi

failed=0
found=0
searches=0

whendat()
{
    local timespan scale limit cpt itwas
    local year month week day hour

    timespan=`expr $2 - $1`
    year=31536000
    month=2592000
    week=604800
    day=86400
    hour=3600

    for scale in year month week day hour
    do
	eval limit=\$$scale
	if test 0$timespan -gt $limit; then
	    test "$itwas" && itwas="$itwas, "
	    cpt=0
	    while test "$timespan" -gt $limit
	    do
		cpt=`expr $cpt + 1`
		timespan=`expr $timespan - $limit`
	    done
	    if test "$cpt" -gt 1; then
		cpt="$cpt ${scale}s"
	    else
		cpt="$cpt $scale"
	    fi
	    itwas="$itwas$cpt"
	fi
    done

    echo $itwas ago
}

for lookup in $LOOKUP
do
    test -d $lookup || continue
    searches=`expr $searches + 1`
    for cert in `find $lookup -type f -name '*.crt' -o -name '*.pem'`
    do
	if ! test -r "$cert"; then
	    body="$body; can't read `basename $lookup`"
	    continue
	elif ! grep '^-----BEGIN CERTIFICATE-----' "$cert" >/dev/null 2>&1; then
	    continue

	fi
	notafter=$(date -d "`openssl x509 -text -noout -in $cert 2>/dev/null | awk '/Not After :/{print $4\" \"$5\" \"$6\" \"$7\" \"$8}'`" +%s)
	test -z "$notafter" && continue
	found=`expr $found + 1`
	if test "$notafter" -lt $now; then
	    ret=CRITICAL
	    when="`whendat $notafter $now`"
	    body="$body;`basename $lookup`:`basename $cert` expired $when"
	    failed=`expr $failed + 1`
	elif test "$checkfor" = 1week; then
	    if test "$notafter" -lt $inaboutaweek; then
		test -z "$ret" && ret=WARNING
		body="$body;`basename $lookup`:`basename $cert` will expire within a week"
	    fi
	elif test "$checkfor" = 2months; then
	    if test "$notafter" -lt $inaboutsixweeks; then
		test -z "$ret" && ret=WARNING
		body="$body;`basename $lookup`:`basename $cert` will expire within six weeks"
	    fi
	fi
    done
done

if test -z "$ret"; then
    ret=OK
fi
perfdata=" | $found;$failed"

echo "CERTIFICATES $ret$body$perfdata"
eval ret=\$$ret
exit $ret
