- block:
  - name: Waits for Scalelite API
    changed_when: False
    delegate_to: "{{ groups['scalelite'][0] }}"
    register: is_started
    retries: 20
    run_once: yes
    shell: docker exec -it scalelite-api uptime
    until: is_started.rc == 0
  - name: Initializes Scalelite Database
    args:
      chdir: /etc/docker-compose/scalelite
      creates: /etc/docker-compose/scalelite/db-init.log
    delegate_to: "{{ groups['scalelite'][0] }}"
    run_once: yes
    shell: docker exec -i scalelite-api bundle exec rake db:setup >db-init.log 2>&1
  - name: Updates Scalelite Database
    args:
      chdir: /etc/docker-compose/scalelite
      creates: /etc/docker-compose/scalelite/db-upgrade-1.1.b4.log
    delegate_to: "{{ groups['scalelite'][0] }}"
    run_once: yes
    shell: docker exec -i scalelite-api bundle exec rake db:migrate >db-upgrade-1.1.b4.log 2>&1
    when:
    - custom_scalelite_api | default(False)
  when:
  - ansible_fqdn not in groups['drbd']
- block:
  - name: Waits for Scalelite API
    changed_when: False
    register: is_started
    retries: 20
    shell: docker exec -it scalelite-api uptime
    until: is_started.rc == 0
## FIXME:
## when DRBD, the scalelite systemd unit it not started by Ansible
## make sure that the proper primitive was declared, and service was started on DRBD primary node
## note that DRBD can't start scalelite until the scalelite role was applied at least once
## ... same goes for postgres/redis. wouldn't have worked, had I not first deployed those roles
## without DRBD, then reset databases and configured my distributed volumes, and only then
## configured corosync with all resources in place
## tldr: we're fucked ...
  - name: Initializes Scalelite Database
    args:
      chdir: /etc/docker-compose/scalelite
      creates: /etc/docker-compose/scalelite/db-init.log
    shell: docker exec -i scalelite-api bundle exec rake db:setup >db-init.log 2>&1
  - name: Marks DB initialized on other DRBD members
    copy:
      content: "# Done on DRBD primary node"
      dest: /etc/docker-compose/scalelite/db-init.log
      force: no
      group: root
      mode: 0644
      owner: root
  - block:
    - name: Updates Scalelite Database
      args:
        chdir: /etc/docker-compose/scalelite
        creates: /etc/docker-compose/scalelite/db-upgrade-1.1.b4.log
      shell: docker exec -i scalelite-api bundle exec rake db:migrate >db-upgrade-1.1.b4.log 2>&1
    - name: Marks DB upgraded on other DRBD members
      copy:
        content: "# Done on DRBD primary node"
        dest: /etc/docker-compose/scalelite/db-upgrade-1.1.b4.log
        force: no
        group: root
        mode: 0644
        owner: root
    when:
    - custom_scalelite_api | default(False)
  when:
  - ansible_fqdn in groups['drbd']
  - drbd_is_primary | default(False)
