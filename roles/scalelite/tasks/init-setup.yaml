- block:
  - name: Waits for Scalelite API
    changed_when: False
    command: docker exec -it scalelite-api uptime
    delay: 10
    delegate_to: "{{ groups['scalelite'][0] }}"
    register: is_started
    retries: 6
    run_once: yes
    until: is_started.rc == 0
  - name: Initializes Scalelite Database
    args:
      chdir: /etc/docker-compose/scalelite
      creates: /etc/docker-compose/scalelite/db-init.log
    delegate_to: "{{ groups['scalelite'][0] }}"
    run_once: yes
    shell: |
      docker exec -i scalelite-api bundle exec rake db:setup >db-init.log 2>&1;
      echo init >db-upgrade-{{ scalelite_images_release }}.log 2>&1
  - name: Updates Scalelite Database
    args:
      chdir: /etc/docker-compose/scalelite
      creates: "/etc/docker-compose/scalelite/db-upgrade-{{ scalelite_images_release }}.log"
    delegate_to: "{{ groups['scalelite'][0] }}"
    run_once: yes
    shell: |
      docker exec -i scalelite-api bundle exec rake db:migrate >db-upgrade-{{ scalelite_images_release }}.log 2>&1
  when:
  - ansible_nodename not in groups['drbd']
  - ansible_hostname not in groups['drbd']
  - ansible_fqdn not in groups['drbd']
- block:
  - name: Waits for Scalelite API
    changed_when: False
    command: docker exec -it scalelite-api uptime
    delay: 10
    register: is_started
    retries: 6
    until: is_started.rc == 0
  - name: Initializes Scalelite Database
    args:
      chdir: /etc/docker-compose/scalelite
      creates: /etc/docker-compose/scalelite/db-init.log
    shell: |
      docker exec -i scalelite-api bundle exec rake db:setup >db-init.log 2>&1;
      echo init >db-upgrade-{{ scalelite_images_release }}.log 2>&1
  - name: Updates Scalelite Database
    args:
      chdir: /etc/docker-compose/scalelite
      creates: "/etc/docker-compose/scalelite/db-upgrade-{{ scalelite_images_release }}.log"
    shell: |
      docker exec -i scalelite-api bundle exec rake db:migrate >db-upgrade-{{ scalelite_images_release }}.log 2>&1
  when:
  - >
      ansible_nodename in groups['drbd']
      or ansible_hostname in groups['drbd']
      or ansible_fqdn in groups['drbd']
  - drbd_is_primary | default(False)
- name: Marks DB initialized on secondary nodes
  copy:
    content: "# Done on Scalelite primary node"
    dest: /etc/docker-compose/scalelite/db-init.log
    force: no
    group: root
    mode: 0644
    owner: root
- name: Marks DB upgraded on secondary nodes
  copy:
    content: "# Done on Scalelite primary node"
    dest: "/etc/docker-compose/scalelite/db-upgrade-{{ scalelite_images_release }}.log"
    force: no
    group: root
    mode: 0644
    owner: root
