- name: Sets Postgres Listen Address
  lineinfile:
    dest: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
    regexp: listen_addresses
    line: "listen_addresses = '{{ postgres_bind_address }}'"
  notify: Reloads Postgres
- name: Allows Remote Connections to Postgres
  lineinfile:
    dest: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
    regexp: "^host    all             all              {{ h }}                       md5"
    line: "host    all             all              {{ h }}                       md5"
  loop: "{{ postgres_trusted_clients }}"
  loop_control:
    loop_var: h
  notify: Reloads Postgres
- name: Sets Postgres Max Connections
  lineinfile:
    dest: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
    regexp: max_connections
    line: "max_connections = {{ postgres_max_connections }}"
  notify: Reloads Postgres
- name: Sets Postgres Shared Buffers Size
  lineinfile:
    dest: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
    regexp: shared_buffers
    line: "shared_buffers = {{ postgres_shared_buffers_mbytes }}MB"
  notify: Reloads Postgres
- block:
  - name: Installs Sysctl Shared Buffers Configuration
    register: sysctlconf
    lineinfile:
      dest: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
      regexp: kernel.shmmax
      line: "kernel.shmmax = {{ (postgres_shared_buffers_mbytes * 1024 * 1024 * 125 / 100) | round }}"
  - name: Applies new Sysctl Configuration
    shell: "sysctl -w kernel.shmmax={{ (postgres_shared_buffers_mbytes * 1024 * 1024 * 125 / 100) | round }}"
  when:
  - (postgres_shared_buffers_mbytes | int) > 1024
- name: Checks Permission on Postgres Data Directory
  changed_when: False
  register: pgdata
  stat:
    path: /var/lib/postgres
- name: Fixes Permissions on Postgres Data Directory
  args:
    warn: False
  shell: |
    chown -R postgres:postgres /var/lib/postgres
  when:
  - pgdata is defined
  - pgdata.stat is defined
  - >
      (pgdata.stat.pw_name is defined
       and pgdata.stat.pw_name != 'postgres')
      or (pgdata.stat.gr_name is defined
          and pgdata.stat.gr_name != 'postgres')
- block:
  - include_tasks: dbinit.yaml
  - name: Ensures Postgres is Running & Starts on Boot
    service:
      enabled: yes
      name: postgresql
      state: started
  when:
  - ansible_fqdn not in groups['drbd']
  - ansible_hostname not in groups['drbd']
  - ansible_nodename not in groups['drbd']
- block:
  - include_tasks: dbinit.yaml
    when:
    - >
         (ansible_nodename in groups['drbd']
          and drbd_is_primary | default(False))
         or (ansible_hostname in groups['drbd']
             and drbd_is_primary | default(False))
         or (ansible_fqdn in groups['drbd']
             and drbd_is_primary | default(False))
  - include_role:
      name: pacemaker
      tasks_from: add-service.yaml
    loop:
    - postgres_coturn
    - postgres_greenlight
    - postgres_grafana
    - postgres_peertube
    - postgres_scalelite
    loop_control:
      loop_var: apply_to
    vars:
      #corosync_hostgroup: "{{ apply_to }}"
      service_id: Postgresql-rsc
      service_name: postgresql
      service_type: lsb
    when:
    - groups[apply_to] | length > 0
    - >
        ansible_nodename in groups[apply_to]
        or ansible_hostname in groups[apply_to]
        or ansible_fqdn in groups[apply_to]
  when:
  - >
      ansible_fqdn in groups['drbd']
      or ansible_hostname in groups['drbd']
      or ansible_nodename in groups['drbd']
  - corosync_hostgroup | default(False)
- name: Installs Postgres User Ansible Working Directory
  file:
    dest: "{{ fl }}"
    group: postgres
    mode: 0700
    owner: postgres
    state: directory
  loop:
  - /var/lib/postgresql/.ansible
  - /var/lib/postgresql/.ansible/tmp
  loop_control:
    loop_var: fl
  when:
  - >
      (ansible_nodename not in groups['drbd']
       and ansible_hostname not in groups['drbd']
       and ansible_fqdn not in groups['drbd'])
      or (ansible_nodename in groups['drbd']
          and drbd_is_primary | default(False))
      or (ansible_hostname in groups['drbd']
          and drbd_is_primary | default(False))
      or (ansible_fqdn in groups['drbd']
          and drbd_is_primary | default(False))
- include_role:
    name: pacemaker
    tasks_from: finish-setup.yaml
  loop:
  - postgres_coturn
  - postgres_greenlight
  - postgres_grafana
  - postgres_peertube
  - postgres_scalelite
  loop_control:
    loop_var: apply_to
  when:
  - >
      ansible_fqdn in groups['drbd']
      or ansible_hostname in groups['drbd']
      or ansible_nodename in groups['drbd']
  - groups[apply_to] | length > 0
  - >
      ansible_nodename in groups[apply_to]
      or ansible_hostname in groups[apply_to]
      or ansible_fqdn in groups[apply_to]
  - corosync_hostgroup | default(False)
