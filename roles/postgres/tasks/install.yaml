- name: Ensures Role Dependencies are Installed
  apt:
    name:
    - gnupg2
    - sudo
    state: present
  register: deps1
- name: Ensures Psycopg2 is Installed
  apt:
    name: "{{ 'python3-psycopg2' if (ansible_distribution_release == 'bullseye')
                                 else [ 'python-psycopg2', 'python3-psycopg2' ] }}"
    state: present
  register: deps2
- name: Reloads Facts
  setup:
  when:
  - >
      (deps1 is defined and deps1 is changed)
      or (deps2 is defined and deps2 is changed)

- name: Installs Postgres GPG key
  args:
    creates: /etc/apt/sources.list.d/postgres.list
    executable: /bin/bash
    warn: False
  shell: |
    set -o pipefail && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
- name: Installs Postgres APT Configuration
  register: srcs
  template:
    dest: /etc/apt/sources.list.d/postgres.list
    group: root
    mode: 0644
    owner: root
    src: apt.j2
- name: Updates APT Cache
  apt:
    update_cache: yes
  when:
  - srcs is defined
  - srcs is changed

- name: Installs Postgres
  apt:
    name:
    - "postgresql-{{ postgres_version }}"
    - "postgresql-client-{{ postgres_version }}"
    state: present

- block:
  - name: Ensures Postgres is Disabled on DRBD Members
    service:
      enabled: no
      name: postgresql
  - name: Ensures Postgres is Stopped on DRBD Backup Members
    service:
      name: postgresql
      state: stopped
    when:
    - not (drbd_is_primary | default(False))
  when:
  - >
      ansible_nodename in groups['drbd']
      or ansible_hostname in groups['drbd']
      or ansible_fqdn in groups['drbd']
