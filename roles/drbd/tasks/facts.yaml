- name: Fail if Runtime mismatches Ansible Configuration
  fail:
    msg: |
      Found a DRBD device on {{ ansible_nodename }}, which is not a member
      of the drbd host group
  when:
  - ansible_fqdn not in groups['drbd']
  - ansible_nodename not in groups['drbd']
  - ansible_hostname not in groups['drbd']
- name: Checks DRBD Up
  changed_when: False
  failed_when: False
  register: drbddev
  shell: |
    grep -E 'cs:(Connected|Sync(Source|Target))' /proc/drbd
- include_tasks: up.yaml
  when:
  - drbddev is defined
  - drbddev.rc is defined
  - (drbddev.rc | default(0)) != 0
- name: Checks DRBD Inactive
  changed_when: False
  failed_when: False
  register: drbd2sec
  shell: "grep ro:Secondary/Secondary /proc/drbd"
- include_tasks: make-primary.yaml
  when:
  - drbd2sec is defined
  - drbd2sec.rc is defined
  - (drbd2sec.rc | default(1)) == 0
- name: Checks DRBD Status
  changed_when: False
  failed_when: False
  register: drbdproc
  shell: "grep ro:Primary /proc/drbd"
- name: Sets DRBD Facts
  set_fact:
    drbd_is_primary: "{{ True if (drbdproc is defined
                                  and drbdproc.rc is defined
                                  and (drbdproc.rc | default(1)) == 0)
                              else False }}"
- block:
  - name: Resets DRBD Node Facts
    run_once: yes
    set_fact:
      primary_node: []
      secondary_node: []
  - name: Checks We have a Primary node
    loop: "{{ groups[corosync_hostgroup] }}"
    loop_control:
      loop_var: chk
    run_once: yes
    set_fact:
      primary_node: "{{ primary_node + ( [ chk ] if (hostvars[chk]['drbd_is_primary']) else [ ] ) }}"
      secondary_node: "{{ secondary_node + ( [ ] if (hostvars[chk]['drbd_is_primary']) else [ chk ] ) }}"
  - name: Fails When DRBD Primary Missing
    fail:
      msg: |
        Could not figure out which node is DRBD Primary
        primary => {{ primary_node | length }}
        secondary => {{ secondary_node | length }}
    when:
    - primary_node | length != 1
  when:
  - corosync_hostgroup is defined
  - groups[corosync_hostgroup] is defined
  - groups[corosync_hostgroup] | length > 0
