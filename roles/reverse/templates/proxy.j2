server {
    listen 80;
    server_name {{ site_fqdn }};
    server_tokens off;
    error_log /var/log/nginx/error-{{ site_fqdn }}.log;
    access_log /var/log/nginx/access-{{ site_fqdn }}.log;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
{% if x_frame_options_deny | default(True) %}
    add_header X-Frame-Options DENY;
{% endif %}
    add_header X-Content-Type-Options nosniff;
{% if x_xss_protection | default(True) %}
    add_header X-XSS-Protection "1; mode=block";
{% endif %}
{% if letsencrypt_challenge_account_thumbprint | default(False) %}
    location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
	default_type text/plain;
	return 200 "$1.{{ letsencrypt_challenge_account_thumbprint }}";
    }
{% endif %}
    rewrite ^/(.*) https://{{ site_fqdn }}/$1;
}

{% if proxy_to | length > 1 %}
upstream us{{ site_fqdn.split('.')[0] }} {
{% for node in proxy_to %}
    server {{ node }}:{{ proxy_port }};
{% endfor %}
}

{% endif %}
server {
    listen 443;
    server_name {{ site_fqdn }};
    server_tokens off;
    error_log /var/log/nginx/ssl-error-{{ site_fqdn }}.log;
    access_log /var/log/nginx/ssl-access-{{ site_fqdn }}.log;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
{% if x_frame_options_deny | default(True) %}
    add_header X-Frame-Options DENY;
{% endif %}
    add_header X-Content-Type-Options nosniff;
{% if x_xss_protection | default(True) %}
    add_header X-XSS-Protection "1; mode=block";
{% endif %}
    ssl on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
{% if bbb_uses_selfsigned | default(True) %}
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
{% else %}
    ssl_certificate /etc/letsencrypt/live/{{ ansible_fqdn }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ ansible_fqdn }}/privkey.pem;
{% endif %}
    ssl_dhparam /etc/nginx/ssl/dh.pem;
{% if letsencrypt_challenge_account_thumbprint | default(False) %}
    location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
	default_type text/plain;
	return 200 "$1.{{ letsencrypt_challenge_account_thumbprint }}";
    }
{% endif %}
    location / {
{% if nginx_max_body_size | default(False) %}
	client_max_body_size {{ nginx_max_body_size }};
{% endif %}
{% if should_filter | default(False) and nginx_backends_ipfilter | length > 0 %}
{% for addr in nginx_backends_ipfilter %}
	allow {{ addr }};
{% endfor %}
	deny all;
{% endif %}
	proxy_http_version 1.1;
{% if proxy_to | length > 1 %}
	proxy_pass {{ proxy_proto | default('https') }}://us{{ site_fqdn.split('.')[0] }};
{% else %}
	proxy_pass {{ proxy_proto | default('https') }}://{{ proxy_to[0] }}:{{ proxy_port }};
{% endif %}
{% if proxy_proto | default('https') == 'https' %}
	proxy_ssl_verify off;
{% endif %}
	proxy_set_header Connection "upgrade";
	proxy_set_header Host $host;
	proxy_set_header If-Range $http_if_range;
	proxy_set_header Range $http_range;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Port 443;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Protocol https;
	proxy_set_header X-Real-IP $remote_addr;
    }
}
