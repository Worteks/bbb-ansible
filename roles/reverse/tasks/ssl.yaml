- block:
  - name: Lists LetsEncrypt Account Data from Primary Reverse
    args:
      chdir: /etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org
    delegate_to: "{{ groups['reverse'][0] }}"
    register: le_account
    run_once: yes
    shell: find . -type f
  - name: Synchronizes LetsEncrypt Account Data from Primary Reverse to Ansible Node
    delegate_to: "{{ groups['reverse'][0] }}"
    fetch:
      dest: "{{ playbook_dir }}/.pki/reverse-letsencrypt"
      group: root
      owner: root
      src: "/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/{{ file }}"
    loop_control:
      loop_var: file
    loop: "{{ le_account.stdout_lines }}"
    run_once: yes
    when:
    - le_account is defined
    - le_account.stdout_lines is defined
    - le_account.stdout_lines | length > 0
  - name: Sends LetsEncrypt Account Data to Reverses
    synchronize:
      dest: /etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org
      group: True
      owner: True
      perms: True
      src: "{{ playbook_dir }}/.pki/reverse-letsencrypt/{{ groups['reverse'][0] }}/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org"
    when:
    - ansible_nodename != groups['reverse'][0]
  - name: Initializes Domains List Fact
    set_fact:
      cert_fqdn: []
  - name: Populates Domains List Fact
    loop:
    - "{{ peertube_fqdn | default(False) if (expose_peertube | default(True)) else False }}"
    - "{{ alertmanager_fqdn | default(False) if (expose_alertmanager | default(True)) else False }}"
    - "{{ bbbcsp_fqdn | default(False) if (expose_bbbcsp | default(True)) else False }}"
    - "{{ grafana_fqdn | default(False) if (expose_grafana | default(True)) else False }}"
    - "{{ greenlight_fqdn | default(False) if (expose_greenlight | default(True)) else False }}"
    - "{{ kibana_fqdn | default(False) if (expose_kibana | default(True)) else False }}"
    - "{{ prometheus_fqdn | default(False) if (expose_prometheus | default(True)) else False }}"
    - "{{ scalelite_fqdn | default(False) if (expose_scalelite | default(True)) else False }}"
    set_fact:
      cert_fqdn: "{{ cert_fqdn + [ item ] }}"
    when:
    - (item | default(False)) not in [ False, 'false', 'False', 'FALSE' ]
    - item not in cert_fqdn
  - include_role:
      name: certbot
      tasks_from: generate-cert.yaml
    vars:
      certbot_hack_renew: "{{ True if (groups['reverse'] | length > 1) else False }}"
  when:
  - not (bbb_uses_selfsigned | default(True))
- include_role:
    name: pki
    tasks_from: install-cert.yaml
  when:
  - bbb_uses_selfsigned | default(True)
